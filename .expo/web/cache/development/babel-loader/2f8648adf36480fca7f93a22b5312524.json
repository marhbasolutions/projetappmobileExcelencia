{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Applications/MAMP/htdocs/assurancemobile/src/components/CustomText.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\n\nvar CustomText = function (_Component) {\n  _inherits(CustomText, _Component);\n\n  var _super = _createSuper(CustomText);\n\n  function CustomText() {\n    var _this;\n\n    _classCallCheck(this, CustomText);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.setFontType = function (type) {\n      switch (type) {\n        case 'black':\n          return 'Poppins-Black';\n\n        case 'bold':\n          return 'Poppins-Bold';\n\n        case 'light':\n          return 'Poppins-Light';\n\n        case 'medium':\n          return 'Poppins-Medium';\n\n        default:\n          return 'Poppins-Regular';\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(CustomText, [{\n    key: \"render\",\n    value: function render() {\n      var font = this.setFontType(this.props.type ? this.props.type : 'normal');\n      var style = [{\n        fontFamily: font\n      }, this.props.style || {}];\n\n      var allProps = _extends({}, this.props, {\n        style: style\n      });\n\n      return React.createElement(Text, _extends({}, allProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 12\n        }\n      }), this.props.children);\n    }\n  }]);\n\n  return CustomText;\n}(Component);\n\nexport default CustomText;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/assurancemobile/src/components/CustomText.js"],"names":["React","Component","CustomText","setFontType","type","font","props","style","fontFamily","allProps","children"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;IAGMC,U;;;;;;;;;;;;;;;;UACJC,W,GAAc,UAAAC,IAAI,EAAI;AACpB,cAAQA,IAAR;AACE,aAAK,OAAL;AACE,iBAAO,eAAP;;AACF,aAAK,MAAL;AACE,iBAAO,cAAP;;AACF,aAAK,OAAL;AACE,iBAAO,eAAP;;AACF,aAAK,QAAL;AACE,iBAAO,gBAAP;;AACF;AACE,iBAAO,iBAAP;AAVJ;AAYD,K;;;;;;;6BAEQ;AACP,UAAMC,IAAI,GAAG,KAAKF,WAAL,CAAiB,KAAKG,KAAL,CAAWF,IAAX,GAAkB,KAAKE,KAAL,CAAWF,IAA7B,GAAoC,QAArD,CAAb;AACA,UAAMG,KAAK,GAAG,CAAC;AAAEC,QAAAA,UAAU,EAAEH;AAAd,OAAD,EAAuB,KAAKC,KAAL,CAAWC,KAAX,IAAoB,EAA3C,CAAd;;AACA,UAAME,QAAQ,GAAG,SAAc,EAAd,EAAkB,KAAKH,KAAvB,EAA8B;AAAEC,QAAAA,KAAK,EAAEA;AAAT,OAA9B,CAAjB;;AACA,aAAO,oBAAC,IAAD,eAAUE,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAqB,KAAKH,KAAL,CAAWI,QAAhC,CAAP;AACD;;;;EArBsBT,S;;AAuBzB,eAAeC,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Text } from 'react-native';\n\nclass CustomText extends Component {\n  setFontType = type => {\n    switch (type) {\n      case 'black':\n        return 'Poppins-Black';\n      case 'bold':\n        return 'Poppins-Bold';\n      case 'light':\n        return 'Poppins-Light';\n      case 'medium':\n        return 'Poppins-Medium';\n      default:\n        return 'Poppins-Regular';\n    }\n  };\n\n  render() {\n    const font = this.setFontType(this.props.type ? this.props.type : 'normal');\n    const style = [{ fontFamily: font }, this.props.style || {}];\n    const allProps = Object.assign({}, this.props, { style: style });\n    return <Text {...allProps}>{this.props.children}</Text>;\n  }\n}\nexport default CustomText;\n"]},"metadata":{},"sourceType":"module"}