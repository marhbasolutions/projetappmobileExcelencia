{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Applications/MAMP/htdocs/assurancemobile/src/screen/account/accountScreen.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Header from \"../HeaderScreen\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { Container, Content, List, ListItem, Thumbnail, Left, Body, Icon, Right, Button } from 'native-base';\nimport Carousel from \"@rhysforyou/react-native-carousel\";\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport styles from \"./style\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport FooterCompement from \"../FooterScreen\";\nvar appId = \"1047121222092614\";\nexport default function accountScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(new Date(1598051730000)),\n      _useState2 = _slicedToArray(_useState, 2),\n      date = _useState2[0],\n      setDate = _useState2[1];\n\n  var _useState3 = useState('date'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      mode = _useState4[0],\n      setMode = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      show = _useState6[0],\n      setShow = _useState6[1];\n\n  var onChange = function onChange(event, selectedDate) {\n    var currentDate = selectedDate || date;\n    setShow(Platform.OS === 'ios');\n    setDate(currentDate);\n  };\n\n  var showMode = function showMode(currentMode) {\n    setShow(true);\n    setMode(currentMode);\n  };\n\n  var showDatepicker = function showDatepicker() {\n    showMode('date');\n  };\n\n  var showTimepicker = function showTimepicker() {\n    showMode('time');\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, React.createElement(Header, {\n    name: \"Home\",\n    openDrawer: navigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }), React.createElement(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, React.createElement(FontAwesome, {\n    style: {\n      alignSelf: 'center',\n      marginTop: 33\n    },\n    color: '#30336b',\n    name: \"handshake-o\",\n    size: 55,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }), React.createElement(Text, {\n    style: styles.titleFirst,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, \"Profil\"), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, React.createElement(ListItem, {\n    selected: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, React.createElement(Left, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 33\n    }\n  }, \"Nom\")), React.createElement(Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 33\n    }\n  }, \"Mohamed\")))), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, React.createElement(ListItem, {\n    selected: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, React.createElement(Left, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 33\n    }\n  }, \"Preom\")), React.createElement(Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 33\n    }\n  }, \"Ghazdali\")))), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, React.createElement(ListItem, {\n    selected: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }, React.createElement(Left, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 33\n    }\n  }, \"Email\")), React.createElement(Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 33\n    }\n  }, \"Mohamed.ghadali@gmail.com\")))), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, React.createElement(ListItem, {\n    selected: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, React.createElement(Left, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 33\n    }\n  }, \"Tel\")), React.createElement(Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 33\n    }\n  }, \"0658455633\")))), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, React.createElement(ListItem, {\n    selected: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, React.createElement(Left, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 33\n    }\n  }, \"Mot de pass\")), React.createElement(Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 33\n    }\n  }, \"********\"))))), React.createElement(FooterCompement, {\n    name: \"Account\",\n    openDrawer: navigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/assurancemobile/src/screen/account/accountScreen.js"],"names":["React","useState","Header","Ionicons","Container","Content","List","ListItem","Thumbnail","Left","Body","Icon","Right","Button","Carousel","FontAwesome5","FontAwesome","MaterialCommunityIcons","styles","DateTimePicker","FooterCompement","appId","accountScreen","navigation","Date","date","setDate","mode","setMode","show","setShow","onChange","event","selectedDate","currentDate","Platform","OS","showMode","currentMode","showDatepicker","showTimepicker","alignSelf","marginTop","titleFirst"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, Text, View, Image, FlatList, TouchableOpacity, ScrollView, Dimensions, ImageBackground } from 'react-native';\nimport Header from '../HeaderScreen';\nimport { Ionicons } from '@expo/vector-icons';\nimport { Container, Content, List, ListItem, Thumbnail, Left, Body, Icon, Right, Button } from 'native-base';\n\nimport Carousel from \"@rhysforyou/react-native-carousel\";\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport styles from \"./style\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport FooterCompement from '../FooterScreen';\n\n\nconst appId = \"1047121222092614\"\n\n// export default class LoginScreen extends Component {\nexport default function accountScreen({ navigation }) {\n    const [date, setDate] = useState(new Date(1598051730000));\n    const [mode, setMode] = useState('date');\n    const [show, setShow] = useState(false);\n\n    const onChange = (event, selectedDate) => {\n        const currentDate = selectedDate || date;\n        setShow(Platform.OS === 'ios');\n        setDate(currentDate);\n    };\n\n    const showMode = (currentMode) => {\n        setShow(true);\n        setMode(currentMode);\n    };\n\n    const showDatepicker = () => {\n        showMode('date');\n    };\n\n    const showTimepicker = () => {\n        showMode('time');\n    };\n\n    // render() {\n    return (\n        <>\n            <Container>\n\n                <Header name=\"Home\" openDrawer={navigation} />\n\n                <Content>\n\n                    <FontAwesome style={{ alignSelf: 'center', marginTop: 33}} color={'#30336b'} name=\"handshake-o\" size={55} />\n\n                    <Text style={styles.titleFirst}>Profil</Text>\n\n\n                    <List>\n                        <ListItem selected>\n                            <Left>\n                                <Text>Nom</Text>\n                            </Left>\n                            <Body>\n                                <Text>Mohamed</Text>\n                            </Body>\n                        </ListItem>\n                    </List>\n\n                    <List>\n                        <ListItem selected>\n                            <Left>\n                                <Text>Preom</Text>\n                            </Left>\n                            <Body>\n                                <Text>Ghazdali</Text>\n                            </Body>\n                        </ListItem>\n                    </List>\n\n                    <List>\n                        <ListItem selected>\n                            <Left>\n                                <Text>Email</Text>\n                            </Left>\n                            <Body>\n                                <Text>Mohamed.ghadali@gmail.com</Text>\n                            </Body>\n                        </ListItem>\n                    </List>\n\n                    <List>\n                        <ListItem selected>\n                            <Left>\n                                <Text>Tel</Text>\n                            </Left>\n                            <Body>\n                                <Text>0658455633</Text>\n                            </Body>\n                        </ListItem>\n                    </List>\n\n                    <List>\n                        <ListItem selected>\n                            <Left>\n                                <Text>Mot de pass</Text>\n                            </Left>\n                            <Body>\n                                <Text>********</Text>\n                            </Body>\n                        </ListItem>\n                    </List>\n\n\n                </Content>\n                <FooterCompement name=\"Account\" openDrawer={navigation} />\n\n            </Container>\n        </>\n    )\n\n}\n\n//   componentDidMount() {\n//   }\n\n//   componentWillUnmount() {\n//   }\n\n//   onLoginPress() {\n\n//   }\n\n//   async onFbLoginPress() {\n//     const { type, token } = await Expo.Facebook.logInWithReadPermissionsAsync(appId, {\n//       permissions: ['public_profile', 'email'],\n//     });\n//     if (type === 'success') {\n//       const response = await fetch(\n//         `https://graph.facebook.com/me?access_token=${token}`);\n//       Alert.alert(\n//         'Logged in!',\n//         `Hi ${(await response.json()).name}!`,\n//       );\n//     }\n//   }\n// }"]},"metadata":{},"sourceType":"module"}